{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Obsidian Notes","text":"<p>Publish your public notes with MkDocs</p>"},{"location":"#hello-world","title":"Hello World!","text":"<p>The <code>index.md</code> in the <code>/docs</code> folder is the homepage you see here.</p> <p>The folders in <code>/docs</code> appear as the main sections on the navigation bar.</p> <p>The notes appear as pages within these sections. For example, [[Note 1]] in <code>Topic 1</code></p>"},{"location":"ACL/","title":"ACL","text":"<ul> <li>can only have one ACL per protocol, per direction, and per interface</li> <li>made up of ACEs (access control entries)</li> <li> <p>never act on packets that originate from router itself</p> </li> <li> <p>standard ACL - filter at L3 w source IPv4 address only</p> <ul> <li>CLOSE TO DEST</li> </ul> </li> <li> <p>extended ACL - filter at L3 w src/dest IPv4, filter at L4 using TCP/UDP ports + protocol type info</p> <ul> <li>CLOSE TO SRC</li> </ul> </li> <li> <p>router interface can have</p> <ul> <li>one outbound IPv4 ACL</li> <li>one inbound IPv4 ACL</li> <li>one inbound IPv6 ACL</li> <li>one outbound IPv6 ACL</li> </ul> </li> <li> <p>placement</p> <ul> <li>inbound - when only 1 src network<ul> <li>packets processed before route determined<ul> <li>saves overhead of routing lookups if packet discarded</li> </ul> </li> </ul> </li> <li>outbound</li> </ul> </li> <li>router processes ACL:<ol> <li></li> </ol> </li> </ul>"},{"location":"ACL/#-incoming-packets-routed-to-outbound-int-then-processed-thru-outbound-acl","title":"- incoming packets routed to outbound int, then processed thru outbound ACL","text":""},{"location":"ACL/#config","title":"config","text":"<pre><code>!! numbered standard\n\n!! named standard\n\n!! numbered extended\naccess-list 103 permit tcp 192.168.10.0 0.0.0.255 any eq 80\n\n!! named extended\nip acc ex ACL_NAME\n    permit tcp 192.168.10.0 0.0.0.255 any eq 80\n    !! default deny any any\n</code></pre>"},{"location":"AD/","title":"AD","text":"<p>Windows Active Directory</p> <ul> <li>user profiles<ul> <li>local user profiles</li> <li>roaming user profiles</li> </ul> </li> </ul>"},{"location":"ARP/","title":"ARP","text":"<p>Address Resolution Protocol - resolves L3 (internet) address to L2 (link layer) - tables contain MAC + IPv4 of individ hosts on network - only L3 devices contain ARP table - operates on a single LAN (request-response protocol)</p> <ul> <li>ARP request</li> </ul>"},{"location":"ARP/#arp-spoofing","title":"ARP [[spoofing]]","text":"<ul> <li>ARP does not inherently provide methods for authen arp replies</li> </ul>"},{"location":"ASA/","title":"ASA","text":"<ul> <li> <p>applied security appliance</p> </li> <li> <p>OS differences</p> <ul> <li>no \"do\" before \"show\" commands</li> <li>automatically encrypts all passwords (just <code>enable pass</code> is ok)</li> <li>default request pass but does not have pass set</li> </ul> </li> </ul>"},{"location":"BGP/","title":"BGP","text":"<p>border gateway protocol</p> <p>usually used to route btwn autonomous systems</p>"},{"location":"BYOD/","title":"BYOD","text":"<p>bring your own device</p> <ul> <li>concerns<ul> <li>are they secure?</li> <li>acceptable use policy</li> <li>privacy</li> <li>user acceptance to rules</li> <li>data ownership</li> <li>support ownership - does IT have to help?</li> <li>architecture/infra - what access do users have?</li> <li>forensics -</li> <li>legal concerns - </li> <li>on-board/off-board</li> <li>on-board camera/video</li> </ul> </li> </ul>"},{"location":"BYOD/#security","title":"security","text":"<ul> <li>health checks/posture assessment<ul> <li>persistent agents</li> <li>dissolvable agents - just during check</li> <li>agentless NAC -&gt; integrated w AD</li> </ul> </li> </ul>"},{"location":"BitLocker/","title":"BitLocker","text":"<p>Windows tool to encrypt your hard drive</p>"},{"location":"Bluetooth/","title":"Bluetooth","text":"<ul> <li> <p>usually only within 10 m</p> </li> <li> <p>attacks</p> <ul> <li>bluesnarfing - unauth access to device</li> <li>bluejacking - unsolicited messages over Bluetooth</li> </ul> </li> </ul>"},{"location":"C2/","title":"C2","text":"<p>controls a botnet (controlled computers) - bots generally latent     - can do DDoS     - can relay spam, proxy network traffic - prevent C2 w/ firewall/IPS</p>"},{"location":"CA/","title":"CA","text":"<p>certificate authority</p> <p>offline root certificate authority - kept powered down and off-line for security</p>"},{"location":"DFIR/","title":"DFIR","text":"<ul> <li> <p>digital forensics and incident response</p> <ul> <li>cypat forensics like digital forensics, the rest is like IR</li> </ul> </li> <li> <p>NIST 6 stage IR process</p> <ol> <li>prep - plan, staffing, software</li> <li>detect - [[SIEM]] tools in conjuction w ISP, police etc</li> <li>analysis - logs</li> <li>containment - C2 infra, lock down [[ports]], physically air-gap</li> <li>eradicate/recovery - bsuiness continuity, disaster recovery<ul> <li>reinstall OS, software</li> <li>put back in backups</li> <li>audit user accts</li> <li>run [[vuln]] scan</li> </ul> </li> <li>post-incident activity - debriefs/reviews</li> </ol> </li> <li> <p>types of disaster recovery site</p> <ul> <li>hot - fully functional + immediate recovery from disaster</li> <li>warm - no prod work until disaster<ul> <li>equipped site w no customer data</li> </ul> </li> <li>cold - infrastructure to support IT, but not actual tech</li> </ul> </li> </ul>"},{"location":"DHCP/","title":"DHCP","text":"<p>(dynamic host config protocol)</p> <ul> <li>assign IP's, default gateways, DNS servers, domain names to hosts</li> <li> <p>can be assigned in 3 ways</p> <ul> <li>manual - user sets IP, DHCP server forwards it to PC</li> <li>automatic - DHCP server picks from pool, assigns it to PC permanently</li> <li>dynamic - DHCP server picks from pool, assigns it to client for a lease time</li> </ul> </li> <li> <p>relay agent can be any [[TCP-IP]] host, used to forward requests/replies from server to device in another LAN</p> <ul> <li>will receive DHCP msg and generate new msg to send out on another interface</li> </ul> </li> </ul>"},{"location":"DHCP/#on-cisco-maybe-apipa","title":"on cisco, maybe APIPA","text":"<ul> <li>if DHCP fails, goes to APIPA<ul> <li>APIPA - device self-configures IP/subnet when DHCP server not reachable</li> <li>uses range 169.254.0.1-169.254.255.254 with subnet 255.255.0.0</li> </ul> </li> </ul>"},{"location":"DHCP/#dhcp-behavior","title":"DHCP behavior","text":"<ul> <li> <p>lease origination (DORA)</p> <ol> <li>DHCP DISCOVER (ethernet broadcast 255.255.255.255)- client boots up w/o IP and sends msg on subnet to find DHCP servers<ul> <li>if router present and config to be BOOTP relay agent, request passed to DHCP servers on dif subnets</li> <li>broadcast includes client ID (generally MAC, but can be overrided to be smth else)</li> </ul> </li> <li>DHCP OFFER - broadcast w client ID to inform client of an IP</li> <li>DHCP REQUEST (subnet broadcast) - client confirm address and requests addit. info</li> <li>DHCP ACK - unicast to client after IP is verified<ul> <li>DNS server IP, domain name, lease time also given here</li> </ul> </li> </ol> </li> <li> <p>lease renewal</p> <ol> <li>DHCP REQUEST (unicast) - client to server, asking for lease renewal</li> <li>DHCP ACK (unicast) - server verifies lease</li> </ol> </li> <li> <p>if DHCP server receives invalid or unsupported request (no more addresses in pool), will send DHCPNAK response to client</p> </li> <li>when lease expires<ul> <li>clients sends DHCPRELEASE to tell server that address can be redistributed</li> </ul> </li> </ul>"},{"location":"DHCP/#attacks","title":"attacks","text":"<ul> <li>DHCP starvation attack (done w MAC [[spoofing]])<ol> <li>attacker spams a server w spoofed source MACs to use up its pool</li> <li>attacker sets up their own rogue DHCP server (DHCP spoofing)<ul> <li>usually the attacker will set up their server to try to be the DNS server -&gt; cred harvesting for NetNTLM hash</li> </ul> </li> </ol> </li> <li> <p>when victim tries to reach a url, and attacker replies with IP of its own host</p> <ul> <li>victim sends HTTP request</li> <li>attacker returns HTTP 401 (unauth response) which starts auth process<ul> <li>attacker gets NetNTLM hash</li> </ul> </li> </ul> </li> <li> <p>mitigate w DHCP snooping (which is rlly just logging)</p> </li> </ul>"},{"location":"DHCP/#security","title":"security","text":"<ul> <li>DHCP snooping - DHCP only allowed on trusted ints<ul> <li>i.e. DHCP messages shouldn't be coming from ports that should be only leading to workstations</li> </ul> </li> <li>in AD, DHCP servers have to be authorized</li> </ul>"},{"location":"DNS/","title":"DNS","text":"<p>domain name service</p> <ul> <li>translates domain names to IP addresses</li> <li> </li> <li> <p>[[UDP]] 53 for queries for speed and bc its connectionless</p> </li> <li> <p>[[TCP]] 53 for zone transfers - when name servers exchange updated records </p> </li> <li> <p>common DNS servers</p> <ul> <li>google IPv4<ul> <li><code>8.8.8.8</code></li> <li><code>8.8.4.4</code></li> </ul> </li> <li>cloudflare IPv4<ul> <li><code>1.1.1.1</code></li> </ul> </li> </ul> </li> <li>sometimes have DNS sinkhole so we know who's trying to go to malicious sites</li> </ul> <p>recursive DNS iterative DNS</p> <ul> <li>DNS record request (typing in a URL into browser)<ol> <li>go to DNS recursive revolver (librarian), revolver makes additional requests</li> <li>goes to root nameserver</li> <li>goes to TLD (Top level domain) name server<ul> <li>hosts last portion of domain name, like <code>.com</code></li> </ul> </li> </ol> </li> </ul>"},{"location":"DNS/#1-cause-of-stupid-connectivity-issues-in-rvb-bc-windowslinux-config-files-rely-on-it","title":"1 cause of stupid connectivity issues in [[RvB]] bc windows/linux config files rely on it","text":""},{"location":"DNS/#attacks","title":"attacks","text":"<ul> <li>DNS cache poisoning / DNS [[spoofing]]<ul> <li>false info into DNS cache so that domain name goes to wrong IP</li> <li>can be done thru<ul> <li>modifying DNS server</li> <li>modifying client host file (takes precedence over DNS queries)</li> <li>MITM - send fake response to valid DNS request</li> </ul> </li> </ul> </li> </ul>"},{"location":"DNS/#security","title":"security","text":"<ul> <li>DNSSEC - validate DNS responses using public key crypto</li> <li>DNS resolve malicious site to sinkhole address<ul> <li>identify PC's infected w malware</li> <li>this is essentially content filtering</li> </ul> </li> </ul>"},{"location":"Diffie-Hellman/","title":"Diffie Hellman","text":"<p>fuck you</p>"},{"location":"Dijkstra%27s%20algorithm/","title":"Dijkstra's algorithm","text":"<ul> <li>generally for finding shortest paths btwn nodes in a graph</li> <li> <p>grows like a circular wavefront (visits all closest nodes first, no leap of exploration)</p> <ul> <li>relatively slow in certain topologies</li> </ul> </li> <li> <p>procedure</p> <ol> <li>mark all nodes unvisited (infinite cost)</li> <li>relabel paths w cost at every intersection, mark each node as visited</li> <li>continue until destination is found</li> <li>trace your way back by following each node's parents up to staring node</li> </ol> </li> </ul>"},{"location":"DoS/","title":"DoS","text":"<ul> <li>MAC flooding (CAM table overflow)</li> <li>ZIP bomb</li> <li>overuse cloud resources - just use a lot of instances</li> <li>Ping of Death</li> <li>SYN Flood - use [[TCP]] handshake and send swarms of SYN, but never ACK</li> <li>DDoS (distrib denial of serv) - fuck yea botnets<ul> <li>maybe DDoS amplification w NTP, DNS, ICMP <ul> <li>can be specific to OT (operational tech) -&gt; industrial tech</li> </ul> </li> </ul> </li> </ul>"},{"location":"EAP/","title":"EAP","text":"<p>types - PEAP  - EAP-TLS is most secure     - EAP-TLS relies on both client-side and server-side certs for mutual auth         - needs [[PKI]] - EAP-TTLS     - supports other auth protocols in TLS tunnel     - only requires certificate on the auth server - can use EAP w federation     - often w [[RADIUS]] and 802.1x auth method         - this is eduroam</p>"},{"location":"ECC/","title":"ECC","text":"<p>Elliptic Curve Cryptography - often used w wireless devices bc requires less computing power but still secure</p> <ul> <li>low processing power req<ul> <li>good for small wireless devices</li> </ul> </li> <li>asymmetric encryption</li> </ul>"},{"location":"EIGRP/","title":"EIGRP","text":"<ul> <li>exterior interior gateway routing protocol</li> </ul>"},{"location":"Ethernet/","title":"Ethernet","text":"<ul> <li>ubiquitous standard for wired LANs and WANs</li> <li> <p>still more reliable than radio waves like Wi-Fi</p> </li> <li> <p>deals with MAC</p> </li> </ul>"},{"location":"Ethernet/#ethernet-frame-format","title":"Ethernet frame format","text":"<p>header data trailer - contains FCS (frame check sequence) w CRC     - detects errors, but doesn't ask for resending, just drops</p>"},{"location":"FTP/","title":"FTP","text":"<p>file transfer protocol uses port 20,21</p> <p>filezilla???????</p> <p>then FTPS (FTP over SSL)</p> <p>SFTP uses SSH</p>"},{"location":"GPO/","title":"GPO","text":"<p>group policy object</p>"},{"location":"GPO/#how-to-make-one","title":"how to make one","text":"<ol> <li>duplicate from windows security \u2192 make custom \u2192 export as gpo backup</li> <li>download LGPO</li> <li>make LGPO.bat file with code, folder also has gpo folder, run bat</li> </ol>"},{"location":"HMAC/","title":"HMAC","text":"<p>hash-based message auth code - e.g. HMAC-MD5, HMAC-[[SHA]]1</p> <ul> <li>integrity+auth</li> <li>often used by IPsec and [[SSL-TLS]]</li> </ul>"},{"location":"HSRP/","title":"HSRP","text":"<p>hot standby routing protocol</p>"},{"location":"HTTP/","title":"HTTP","text":"<p>(hypertext transfer protocol) - used to load webpages on [[WWW]]</p> <ul> <li> <p>HTTP (port 80)</p> <ul> <li>messages are in plaintext</li> </ul> </li> <li> <p>HTTPS (port 443)</p> <ul> <li>secure bc requires [[SSL-TLS]] cert from a certificate authority -&gt; public-key encryption<ul> <li>CA-given certificate proves that this group owns a valid public key</li> </ul> </li> <li>also messages are encrypted</li> <li>using https over http improves website authority</li> </ul> </li> <li>http responses<ul> <li>200 OK</li> <li>400 bad request</li> <li>404 resource not found</li> </ul> </li> </ul>"},{"location":"HTTP/#methods","title":"methods","text":"<ul> <li>GET - request info</li> <li>POST - client submitting info to web server<ul> <li>possibly dangerous -&gt; sometimes disabled in [[RvB]]</li> </ul> </li> <li>PUT - POST but idempotent<ul> <li>idempotent -&gt; calling it multiple times has the same effect</li> </ul> </li> </ul>"},{"location":"ICMP/","title":"ICMP","text":"<ul> <li>Internet Control Message Protocol - L3, primarily used for error-reporting<ul> <li>not associated w TCP or UDP - connectionless</li> <li>cannot target a specific port</li> </ul> </li> <li> <p>ping sends ICMP echo request packets</p> <ul> <li>hosts reply w ICMP echo reply packets</li> </ul> </li> <li> <p>windows ping sends 4 echo requests, while linux ping sends continuously</p> <ul> <li>linux (cont) on windows: <code>ping -t 192.168.1.1</code></li> <li>windows (4) on linux: <code>ping -c 4 192.168.1.1</code></li> </ul> </li> <li> <p>kinds of ICMP messages</p> <ul> <li>0 - time exceeded<ul> <li>traceroute uses this one to get its data back to sender</li> </ul> </li> <li>3 - destination unreachable</li> <li>8 - echo request</li> <li>9 - router advertisement</li> <li>10 - router solicitation</li> <li>11 - time exceeded</li> </ul> </li> </ul>"},{"location":"IDS/","title":"IDS","text":"<p>Intrusion Detection Service - watch network traffic - IPS can actually block stuff</p> <ul> <li>passive monitoring can be done w <ul> <li>port mirror (SPAN), network tap</li> <li>cannot actually block traffic<ul> <li>will do out-of-band response by sending [[TCP]] RST frames<ul> <li>shuts down traffic flow after the fact</li> <li>this only works for TCP</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>in-line monitoring - IDS/IPS can actually block</p> </li> <li> <p>identification technologies</p> <ul> <li>signature-based - is this a match w XYZ?</li> <li>anomaly-based - does this deviate from normal?</li> <li>behavior-based - is this behavior weird?</li> <li>heuristics - use ML</li> </ul> </li> </ul>"},{"location":"IMAP/","title":"IMAP","text":"<p>Internet Message Access Protocol  - on TCP port 143 - email retrieval protocol</p> <ul> <li> <p>uses StartTLS command to tell email server that client wants to upgrade to [[SSL-TLS]]</p> </li> <li> <p>IMAPS is TCP port 993 w [[SSL-TLS]]</p> </li> </ul>"},{"location":"IOC/","title":"IOC","text":"<p>indicators of compromise - indicating intrusion</p> <ul> <li>examples<ul> <li>unusual amount of network traffic</li> <li>change to file hash values</li> <li>irregular intl traffic</li> <li>changes to DNS data</li> <li>uncommon login patterns</li> <li>spikes of read requests to certain files</li> </ul> </li> </ul>"},{"location":"IP/","title":"IP","text":"<p>IP addressing - logical L3 address (network) of OSI model - think mailing address - globally managed by IANA (Internet Assigned Numbers Authority) + RIRs (regional Internet registries) - from IPv4, we moved to IPv6</p> <ul> <li> <p>automatically given out by DHCP</p> </li> <li> <p>types of addresses:</p> <ul> <li>loopback (localhost) - traffic thru NIC but never make it to LAN, point is to check that internal [[TCP-IP]] path is working<ul> <li>IPv4: <code>127.0.01</code></li> <li>IPv6: <code>0:0:0:0:0:0:0:1</code></li> </ul> </li> <li>link-local - addresses allocated automatically to computer if DHCP fails them - has sep space so that it will not run into public, private IP's<ul> <li>IPv4: <code>169.254.0.0/16</code></li> <li>IPv6: <code>fe80::/64</code></li> </ul> </li> <li>unique local - essentially IPv6's version of private</li> <li>private (like used in NAT)</li> </ul> </li> </ul>"},{"location":"IPS/","title":"IPS","text":"<p>intrusion prevention system</p>"},{"location":"IPsec/","title":"IPsec","text":"<ul> <li>IPSec usually uses port 500, for OSI layer 3</li> <li>protocol suite adding encryption and auth to IP<ul> <li>Authentication Header - hash for integrity</li> <li>Encapsulating Security Protocol - encrypts+auth<ul> <li>usually SHA2 for hash, AES for enc</li> </ul> </li> <li>Security Association</li> <li>IP is not part of the suite, IPsec runs on top of IP</li> </ul> </li> <li> <p>often used to set up [[VPN]]s</p> </li> <li> <p>modes</p> <ul> <li>tunnel - original IP header+payload is encrypted, new IP header is added</li> <li>transport- payload encrypted but original IP header is not<ul> <li>intermed routers can see final dest of packet</li> </ul> </li> </ul> </li> </ul>"},{"location":"IPv4/","title":"IPv4","text":""},{"location":"IPv4/#pv4-history","title":"Pv4 history","text":"<ul> <li> <p>transition from classful to classless</p> <ul> <li>classful - divides addresses into 5 groups<ul> <li>class A - network ID 8 bits, host ID 24 bits<ul> <li>1st octet <code>10</code></li> </ul> </li> <li>class B - network ID 16 bits, host ID 16 bits<ul> <li>1st octet  <code>10</code></li> </ul> </li> <li>class C - network ID 24 bits, host ID 8 bits<ul> <li>1st octet  <code>110</code></li> </ul> </li> <li>class D - multicast<ul> <li>1st octet <code>1110</code></li> </ul> </li> <li>class E - reserved for experimental<ul> <li>1st octet <code>1111</code></li> </ul> </li> </ul> </li> <li>classless - uses variable-length subnet masking, replacing classful<ul> <li>1993 CIDR (Classless Inter-Domain Routing)</li> </ul> </li> </ul> </li> <li> <p>from IPv4 (1983) to IPv6 (1998)</p> </li> </ul>"},{"location":"IPv4/#structure","title":"structure","text":"<ul> <li>4 octets of binary digits, represented in decimal 0-255</li> <li>[[subnet]]</li> <li>[[wildcard masks]]</li> </ul>"},{"location":"IPv4/#privatepublic-ips","title":"private/public IP's","text":"<ul> <li>originally created to counter address exhaustion problem</li> <li>public - can be accessed directly over the internet</li> <li> <p>private - only exists w/i local network</p> <ul> <li>packet w/ private IP destination will be dropped by routers</li> <li>reserved blocksw<ul> <li>class A: 10.0.0.0/8</li> <li>class B: 172.16.0.0/12</li> <li>class C: 192.168.0.0/16</li> </ul> </li> </ul> </li> <li> <p>translation from Public -&gt; Private, vice versa thru NAT</p> <ul> <li>NAT breaks legacy protocols/services relying on end-to-end IP traceability</li> <li>ran out of IPv4 addresses on 11/25/2019</li> </ul> </li> </ul>"},{"location":"IPv6/","title":"IPv6","text":"<ul> <li>128 bits -&gt; 4.3 undecillion addresses</li> <li> <p>still has [[subnet]]ting, but easier?</p> </li> <li> <p>during normal startup, host will receive link-local address before actual routable one</p> </li> </ul>"},{"location":"IPv6/#security","title":"security","text":"<ul> <li>more IP address space -&gt; no NAT, harder to scan</li> <li>no ARP so no ARP spoofing</li> </ul>"},{"location":"ISP/","title":"ISP","text":"<ul> <li>internet service provider - company that provides access to Internet<ul> <li>provide Internet thru cable, digital subscriber line (DSL), fiber, or satellite connections</li> </ul> </li> <li>control IP address blocks and autonomous system numbers bought from IANA</li> </ul>"},{"location":"LAN/","title":"LAN","text":"<p>local area network</p> <p>defined by a router interface port</p>"},{"location":"LDAP/","title":"LDAP","text":"<p>lightweight directory access protocol - for r/w directories over IP - used in Windows AD</p> <ul> <li>LDAPS secure</li> </ul>"},{"location":"MAC/","title":"MAC","text":"<p>media access control - mac address     - usually displayed in hex         - 6 groups of 2 hex digits         - 1st 3 octets is generally OUI (Organiationally Unique Identifier)     - burnt into NIC</p> <pre><code>- only LAN-unique, not globally unique\n    - vendors sometimes sell devices w same MAC addresses in dif parts of the world where they are unlikely to show up\n    - duplicate MACs on a LAN would cause a lot of collisions\n    - same MACs separated by router okay bc in different LAN\n- can be subject to MAC [[spoofing]]\n    - fake a MAC address\n</code></pre>"},{"location":"MD5/","title":"MD5","text":"<ul> <li>produces 128 bit hash in hex</li> <li>very often used for file download verification</li> <li>proven to have hash collisions</li> </ul>"},{"location":"MITM/","title":"MITM","text":"<p>man in the middle - [[spoofing]]     - SSL Stripping (SSL/HTTP downgrade)         - whenever user first visits website, they actually visit HTTP version first             - hacker intervenes, user only ever sees HTTPS website - DoS (denial of service)</p> <ul> <li>prevention<ul> <li>[[PFS]] for browser security</li> </ul> </li> </ul>"},{"location":"ML-algorithms/","title":"ML algorithms","text":""},{"location":"ML-algorithms/#logistic-regression","title":"logistic regression","text":""},{"location":"ML-algorithms/#random-forest","title":"random forest","text":""},{"location":"ML-algorithms/#xgboost","title":"XGBoost","text":""},{"location":"ML-cheatsheet/","title":"ML cheatsheet","text":""},{"location":"ML-cheatsheet/#basic","title":"basic","text":""},{"location":"ML-cheatsheet/#importing","title":"importing","text":"<pre><code>import\u00a0numpy\u00a0as\u00a0np\nimport\u00a0pandas\u00a0as\u00a0pd\nimport\u00a0matplotlib.pyplot\u00a0as\u00a0plt\nimport\u00a0os\nfrom\u00a0sklearn.model_selection\u00a0import\u00a0train_test_split\nfrom\u00a0sklearn\u00a0import\u00a0linear_model\nfrom\u00a0sklearn.metrics\u00a0import\u00a0accuracy_score,\u00a0confusion_matrix\nfrom\u00a0google.colab\u00a0import\u00a0drive\ndrive.mount('/content/drive')\n#uploaded\u00a0=\u00a0files.upload()\nfilepath\u00a0=\u00a0'/content/drive/My\u00a0Drive/Tai-Yu\u00a0Chen'\nos.chdir(filepath)\n</code></pre>"},{"location":"ML-cheatsheet/#prelim-info","title":"prelim info","text":"<pre><code>print(data.shape)\ndata.describe()\n</code></pre>"},{"location":"ML-cheatsheet/#visualizing-dataplotting","title":"visualizing data/plotting","text":""},{"location":"ML-cheatsheet/#histogram","title":"histogram","text":"<pre><code>import\u00a0matplotlib.pyplot\u00a0as\u00a0plt\nplt.figure(figsize=(10,6))\nplt.hist(medical_data['bmi'],\u00a0edgecolor\u00a0=\u00a0'black')\nplt.xlabel('bmi')\nplt.show()\n</code></pre>"},{"location":"ML-cheatsheet/#box-plot-1-attribute","title":"box plot (1 attribute)","text":"<pre><code>plt.figure(figsize=(15,4))\nsns.boxplot(x=medical_data['bmi'])\n</code></pre>"},{"location":"ML-cheatsheet/#scatter-plot-2-attributes","title":"scatter plot (2 attributes)","text":"<pre><code>plt.figure(figsize=(12,10))\nsns.scatterplot(medical_data['bmi'],\u00a0medical_data['charges'],\u00a0hue=medical_data['sex'])\nplt.show()\n</code></pre>"},{"location":"ML-cheatsheet/#pie-charts","title":"pie charts","text":"<pre><code>categories\u00a0=\u00a0data.groupby(by='category',as_index=False).agg({'unique_col':'count'})\nplt.pie(x=categories['unique_col'],\u00a0labels=categories['category']);\n</code></pre>"},{"location":"ML-cheatsheet/#creating-models","title":"creating models","text":""},{"location":"ML-metrics/","title":"ML metrics","text":""},{"location":"ML-metrics/#classification","title":"classification","text":"<ul> <li>accuracy - % correct</li> <li>precision + recall<ul> <li>precision - % of correct among retrieved instances</li> <li>recall - # of correct<ul> <li>e.g. if you were searching for dog on google, getting back everything would mean 100% recall since you got everything that was relevant, but very low precision</li> </ul> </li> </ul> </li> <li>F1 score</li> <li>note confusion matrix -&gt; what kind of accuracy are we getting?</li> </ul>"},{"location":"ML-metrics/#regression","title":"Regression","text":"<ul> <li>mean squared error</li> <li>mean absolute error</li> <li>R Squared</li> </ul>"},{"location":"ML/","title":"ML","text":"<p>ML-algorithms ML-metrics</p>"},{"location":"ML/#code-cheatsheets","title":"code cheatsheets","text":"<p>ML-cheatsheet</p> <p>triplet loss - minimize distance btwn 2 of the same class, while maximizing distance to 3rd datapoint of dif class</p>"},{"location":"MTU/","title":"MTU","text":"<p>MTU measures the size of the entire packet - vs MSS which is only each packet's payload</p>"},{"location":"NAT/","title":"NAT","text":"<ul> <li> <p>network address translation - meant to address problems of running out of IPv4 address space</p> </li> <li> <p>inside/outside - (literally) which device is being translated by NAT or is the destination</p> </li> <li> <p>local/global - (perspective) - inside/outside network - is it local to you?</p> </li> <li> <p>inside local - source address seen from inside network (gen. private IPv4)</p> </li> <li>inside global - source address seen from outside network (gen. globally routable IPv4)</li> <li>outside local - dest address seen from inside network (gen. globally routable IPv4)</li> <li> <p>outside global - dest address seen from outside network (gen. globally routable IPv4)</p> <ul> <li>if it ever asks about an outside host ip, assume its this one</li> </ul> </li> <li> <p>NAT64 translates IPv6 to IPv4, no private/public address translation</p> </li> </ul>"},{"location":"NAT/#types-of-nat","title":"types of NAT","text":"<ul> <li>static NAT - one-to-one mapping of local and global addresses</li> <li> <p>dynamic NAT - pool of public adds -&gt; assign on queue basis (if run out of addresses -&gt; next request fails)</p> </li> <li> <p>PAT (Port Address Translation/NAT overload) - mult. private IPv4 to few/single public IPv4 </p> <ul> <li>done w src port numbers from TCP/IP session (port nums added to inside global adds) or smth else if packet doesn't involve TCP/UDP (e.g. ICMP uses Query ID)</li> <li>may not translate to original port at the router bc it may already have been used -&gt; uses next available port</li> <li>most home routers, small businesses<ul> <li>doesn't need enough public adds for total user sessions</li> </ul> </li> </ul> </li> <li> <p>[[port forwarding]] - one public IP w port numbers representing different devices in LAN</p> </li> </ul>"},{"location":"NAT/#behavior","title":"Behavior","text":"<ul> <li>dynamic<ul> <li>inside to outside - router receives packet (<code>ip nat inside</code>) from inside network<ol> <li>check the associated ACL, is it permitted? -&gt; yes, need to translate</li> <li>check NAT entries -&gt; no entry so needs to be translated</li> <li>uses next available add in pool and creates translation entry</li> <li>replaces inside local address w new inside global address and forwards packet to outside network</li> </ol> </li> <li>outside to inside - router receives packet from outside network (<code>ip nat outside</code>)<ol> <li>when receive packet, does NAT table lookup</li> <li>forwards it to inside PC</li> </ol> </li> </ul> </li> </ul>"},{"location":"NAT/#problems","title":"problems","text":"<ul> <li>still ran out of addresses anyways</li> <li>geographical distribution (50% of used IP's in US)</li> <li>use of NAT breaks end-to-end onnectivity<ul> <li>NAT breaks so many things including<ul> <li>IPsec</li> <li>Kerberos</li> <li>kinda [[VPN]]s</li> </ul> </li> </ul> </li> </ul>"},{"location":"NFC/","title":"NFC","text":"<p>near field communication</p> <ul> <li>enables contactless payment transactions</li> <li>can be used as auth</li> <li>vulnerable to:<ul> <li>data interception</li> <li>[[replay attack]]s</li> <li>DoS attacks - frequency jamming</li> </ul> </li> </ul>"},{"location":"NIC/","title":"NIC","text":"<ul> <li> <p>network interface card/network adapter</p> <ul> <li>laptops generally have 2+ ([[Wi-Fi]], ethernet)<ul> <li>generally built in now, but used to be plug-in (needed to install corresponding drivers manually)</li> </ul> </li> <li>each NIC has<ul> <li>speed rating - 10 Mbps, 100 Mbps, 1000 Mbps, 1 Gbps</li> <li>driver software - software to pass data btwn OS and NIC</li> <li>MAC address</li> </ul> </li> </ul> </li> <li> <p>a bunch of these on a router</p> <ul> <li>each router port has a NIC, each port is thus associated w a MAC address</li> </ul> </li> <li> <p>note</p> <ul> <li>the dest mac add of a packet changes </li> <li>dest IP of packet never changes</li> </ul> </li> <li> <p>to show NIC on:</p> <ul> <li>[[windows]] <code>ipconfig /all</code><ul> <li>shows up as \u201cEthernet adapter local connection\u201d for wired network or \u201cethernet adapter wireless network connection</li> </ul> </li> <li>Mac OS X <code>ifconfig</code><ul> <li>shows up as \u201cen0, en1...\u201d for each NIC in your computer</li> </ul> </li> <li>Linux and Unix <code>ifconfig</code><ul> <li>shows up as \u201cen0, en1...\u201d for each NIC in your computer </li> </ul> </li> </ul> </li> </ul>"},{"location":"NTP/","title":"NTP","text":"<p>network time protocol</p> <ul> <li>works by defining an authoritative NTP source (ex: time.gov)<ul> <li>given stratum 1</li> </ul> </li> <li> <p>every hop out is +1 stratum</p> <ul> <li>network devices take most trustworthy stratum</li> </ul> </li> <li> <p>classic NTP had no sec features -&gt; NTP DDoS attacks</p> <ul> <li>NTPsec in 2015</li> </ul> </li> </ul>"},{"location":"OS/","title":"OS","text":"<p>operating system</p> <ul> <li>e.g.<ul> <li>linux</li> <li>[[windows]]</li> </ul> </li> </ul>"},{"location":"OSI%20model/","title":"OSI model","text":"<ol> <li>Application - give networking options for programs</li> <li>Presentation - translate Application layer data into standardized data</li> <li>Session - maintain the connection</li> <li>Transport - [[TCP]] [[UDP]], splitting data into segments/datagrams</li> <li>Network - locate destination of request ([IP]), [[routing]], NAT</li> <li>Data Link - physical addressing of transmission (MAC), check for corruption, ethernet, [[switching]], [[STP]]</li> <li>Physical - hardware, binary data -&gt; info and vice versa</li> </ol> <p>![\"OSI encapsulation.jpg\"]</p>"},{"location":"app%20design/","title":"App design","text":"<ul> <li> <p>fuzz testing - automated code testing w random inputs to find zero-days or code faults </p> </li> <li> <p>attacks</p> <ul> <li>memory leak - where memory not returned to system</li> <li>null pointer deref</li> <li>integer overflow</li> <li>directory traversal</li> <li>improper error handling - having too much info in error messages</li> <li>improper input handling</li> <li>API attack</li> <li>resource exhaustion - DoS that may only require one device and low bandwidth<ul> <li>e.g. ZIP bomb, DHCP starvation</li> </ul> </li> </ul> </li> <li> <p>attacks</p> <ul> <li>shimming - alter external behavior of app w/o changes to code<ul> <li>refactoring - change code w/o changing external behavior<ul> <li>metafactoring</li> </ul> </li> <li>sideloading - downloading an app w/o using the official install method</li> </ul> </li> </ul> </li> </ul>"},{"location":"app%20design/#app-sec","title":"app sec","text":"<ul> <li>to find vulns<ul> <li>fuzz testing - automated code testing w random inputs to find zero-days or code faults </li> </ul> </li> <li>input validation -&gt; normalization to fix weird stuff</li> <li>secure cookies</li> <li>HTTP secure headers<ul> <li>enforce HTTPS</li> <li>only allow scripts, stylesheets, img from local site</li> <li>prevent data from loading into iframe</li> </ul> </li> <li>code signing - confirm it has not been changed<ul> <li>trusted CA</li> </ul> </li> <li>allow/deny list</li> </ul>"},{"location":"asymmetric%20encryption/","title":"Asymmetric encryption","text":"<p>also known as public-key encryption</p> <ul> <li>related to [[PKI]]</li> </ul>"},{"location":"attack%20vector/","title":"Attack vector","text":"<ul> <li>direct access<ul> <li>data centers - protect physically</li> <li>OS - admin pass</li> <li>keylogger</li> <li>portable media ([[USB]])</li> </ul> </li> <li>wireless<ul> <li>default login creds on [[WAP]]</li> <li>rogue access point<ul> <li>evil twin for MITM attacks</li> </ul> </li> <li>protocol vulns<ul> <li>[[WPA]]2 Key reinstallation acts</li> <li>WPE</li> </ul> </li> </ul> </li> <li>email attack<ul> <li>very successful</li> <li>phishing</li> </ul> </li> <li>supply chain<ul> <li>underlying infra/manufacture process</li> <li>Stuxnet, fake cisco devices</li> </ul> </li> <li>social media<ul> <li>[[OSINT]] -&gt; user profiling + PII</li> </ul> </li> <li>removable media<ul> <li>USB<ul> <li>infect [[air gap]]ped networks, industrial systems, high-sec devices</li> </ul> </li> </ul> </li> <li>cloud attack<ul> <li>public-facing apps/services</li> <li>sec misconfig</li> <li>brute force attacks</li> <li>phishing users</li> <li>orchestration attacks - make cloud make a bunch of instances<ul> <li>DoS</li> </ul> </li> </ul> </li> </ul>"},{"location":"attacks/","title":"Attacks","text":"<ul> <li>malware</li> <li>[[social engineering]]</li> <li>network attacks</li> <li> <p>[[physical security]]/attacks</p> </li> <li> <p>wireless jamming - needs to be pretty close</p> </li> <li> <p>radio frequency jamming</p> </li> <li> <p>crypto attack</p> <ul> <li>birthday attack -&gt; hash collisions md5</li> <li>downgrade attack - force ppl to use weaker enc (2014 [[SSL-TLS]] POODLE, SSL 3.0)</li> </ul> </li> <li> <p>OSI model attacks</p> <ul> <li>application - exploit</li> <li>presentation - phishing</li> <li>session - hijacking</li> <li>transport - reconaissance</li> <li>network - MITM</li> <li>data link - [[spoofing]]</li> <li>physical - sniffing</li> </ul> </li> <li> <p>app design attacks</p> </li> <li> <p>attacks on AI</p> <ul> <li>poison training data</li> <li>evasion attacks -&gt; jailbreak</li> </ul> </li> </ul>"},{"location":"attacks/#prevention","title":"prevention","text":"<ul> <li>supply chain security<ul> <li>can you trust your hardware</li> <li>use small supplier base</li> <li>strict control over policy/procedure in supplier</li> </ul> </li> <li>local or cloud computing</li> </ul>"},{"location":"backup/","title":"Backup","text":"<ul> <li>full backup</li> <li>incremental backup - only back up changes since last incremental backup</li> <li> <p>differential backup - backup changes since last full backup</p> </li> <li> <p>media</p> <ul> <li>magnetic type 100 GB to multiple TB<ul> <li>easy to ship and store</li> </ul> </li> <li>disk<ul> <li>faster than magnetic type</li> <li>can do deduplicate/compress</li> </ul> </li> <li>copy</li> </ul> </li> <li> <p>NAS vs SAN</p> <ul> <li>NAS (network attached storage)<ul> <li>file-level access -&gt; will need to overwrite entire files</li> </ul> </li> <li>SAN (Storage Area Network)<ul> <li>block-level access -&gt; cjust change portion of disk</li> </ul> </li> </ul> </li> <li> <p>maybe cloud</p> <ul> <li>limited by bandwidth</li> </ul> </li> <li> <p>can backup image</p> </li> <li> <p>locations</p> <ul> <li>offline -&gt; to local devices</li> <li>online -&gt; remote connected third-party thru encrypted channels<ul> <li>also accessible, requires good bandwidth</li> </ul> </li> </ul> </li> </ul>"},{"location":"blockchain/","title":"Blockchain","text":"<ul> <li>decentralized digital ledger system (distributed DB) stored across computers in P2P network</li> <li>enables bitcoin, not is bitcoin</li> </ul>"},{"location":"blockchain/#principles","title":"principles","text":"<ul> <li>integrity - can write, never can delete</li> </ul>"},{"location":"boot%20integrity/","title":"Boot integrity","text":"<ul> <li>security starts from hardware<ul> <li>[[TPM]] - helps w crypto functions (RNG, key gen)</li> <li>HSM</li> </ul> </li> <li>UEFI BIOS <ul> <li>Secure boot verifies signature of bootloader</li> <li>BIOS includes manufacturer's public key -&gt; checked during BIOS update and boot</li> </ul> </li> </ul> <p>secure boot -&gt; bootloader -&gt; OS kernel -&gt; other startup components (like ELAM - early launch antimalware)</p> <ul> <li>measured boot - uefi stores hash of firmware, boot drivers, anything trusted</li> <li>remote attestation to prove to verification server to check that everything is okay</li> </ul>"},{"location":"buffer%20overflow/","title":"Buffer overflow","text":"<ul> <li>overwriting a buffer of memory</li> <li>very hard to find, expoit</li> </ul>"},{"location":"cable/","title":"Cable","text":"<ul> <li> <p>RJ45 is the name for the connectors on the ends of the Ethernet cables</p> </li> <li> <p>gigabit ethernet is full duplex</p> </li> <li> <p>signal strength drops over distance</p> </li> <li>VGA</li> </ul> <p>auto-mdix - why standards     - if frame goes from point A to B, may go over cables w diff capabilities         - may be doing a lot of standards translating     - but also everyone uses Ethernet frame so kinda okay</p>"},{"location":"cable/#types-of-cables","title":"types of cables","text":"<ul> <li>twisted pair<ul> <li>modern Ethernet + telephone<ul> <li>2 types<ul> <li>unshielded twisted pair (UTP)<ul> <li>most common kind</li> <li>managed by IEEE as 802.3</li> </ul> </li> <li>shielded twisted pair (STP)<ul> <li>slight damage = a lot more electromag interf/crosstalk</li> <li>more easily damaged than UTP</li> <li>cost more \u2192 rarer</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>coaxial - copper cable within insulator within copper shield<ul> <li>for higher frequency than twisted pair</li> <li>technically faster than twisted pair</li> <li>difficult to install/maintain bc of the layers</li> </ul> </li> <li>fiber-optic</li> <li> <p>what kind of endings do you use? (straight-through, crossover, rollover)</p> <ul> <li>DTE - data terminal equipment\u00a0</li> <li>DCE - data circuit-terminating equipment</li> <li>DTE to DCE or whatever determines this</li> </ul> </li> <li> <p>referring to the pins at the end - these below are all copper</p> <ul> <li>straight-through - pin order is the same to the other side</li> <li>crossover - data input pins are now reversed to be data output pins</li> <li>rollover/console cable - reverse pin order<ul> <li>reverse the pin order of each wire in a cable<ul> <li>if it rolled over, looks same</li> </ul> </li> <li>somewhat legacy bc used for RS-232 connectors for PC, printer, monitor serial ports</li> </ul> </li> </ul> </li> <li> <p>[[wireless networking]]</p> <ul> <li>most wireless devices are half-duplex bc a device's transmitted signals are generally much stronger than signals it receives</li> <li>if need to transmit and receive at same time -&gt; use dif frequencies</li> </ul> </li> </ul>"},{"location":"cable/#how-use","title":"how use","text":"<ul> <li>typical net connection is PC-&gt; switch -&gt; router = all straight-through</li> <li>anything else is cross-over, as in any like devices as well (includes PC -&gt; router)</li> </ul>"},{"location":"cable/#mgmt","title":"mgmt","text":"<ul> <li>out-of-band mgmt<ul> <li>network isn't available</li> <li>serial connection/[[USB]] port can be used -&gt; connect a modem to manage device<ul> <li>sometimes have dedicated comm router/server that does this</li> </ul> </li> </ul> </li> </ul>"},{"location":"cisco-3-layer%20model/","title":"Cisco 3 layer model","text":"<ul> <li> <p>cisco 3 layer hierarchical model</p> <ul> <li>core<ul> <li>high-speed connection backbone</li> <li>core switches</li> </ul> </li> <li>distribution<ul> <li>connects access layer to core layer</li> <li>distribution switches</li> </ul> </li> <li>access<ul> <li>initial connections to end users</li> </ul> </li> </ul> </li> <li> <p>3-tier network - dedicated hardware for all 3 layers</p> </li> <li>2-tier network - combined hardware for distrib/core, sep for access</li> <li>1-tier network - combined for all 3 layers</li> </ul>"},{"location":"cloud%20computing/","title":"Cloud computing","text":"<ul> <li> <p>cloud computing deployment models</p> <ul> <li>private</li> <li>community - several orgs</li> <li>public</li> <li>hybrid</li> </ul> </li> <li> <p>service models</p> <ul> <li>SaaS - software as a service <ul> <li>remote access to applications based on monthly or annual subscription fee</li> <li>log in and just use it, not respon for maintenance</li> </ul> </li> <li>PaaS - platform as a service<ul> <li>best solution for a web developer intending to create a web app?</li> <li>you get the hardware and stuff, but have to develop yourself</li> </ul> </li> <li>IaaS/HaaS - Infrastructure as a service<ul> <li>responsible for mgmt/sec/data</li> <li>ex: web service provider</li> </ul> </li> <li>XaaS - anything as a service<ul> <li>any IT function done as a service</li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>DaaS - desktop as a service - thin client</li> <li> <p>FaaS - function as a service - just worry about web app, no worry about OS</p> </li> <li> <p>fog computing (\"cloud btwn cloud and LAN\") - operation of computing, storage, and networking services between end devices and computing data centers</p> </li> <li> <p>users use transit gateway to connect to VPC (virtual private cloud)</p> <ul> <li>VPC is an isolated, private cloud inside public one<ul> <li>isolated thru use of <ul> <li>subnets</li> <li>VLAN</li> <li>VPN</li> </ul> </li> </ul> </li> </ul> </li> <li>SIAM (service integration and mgmt) - many diff service providers integrating together for single business</li> </ul>"},{"location":"cloud%20computing/#security","title":"security","text":"<ul> <li>CASB (cloud access security broker) -  sheriff of cloud computing env</li> <li>CSA - nonprofit org promoting best practices related to cloud computing environments</li> <li>CCM (cloud controls matrix) - </li> </ul>"},{"location":"cloud%20computing/#comparisons-of-security","title":"comparisons of security","text":"<p>on-premises sec - full control - on-site IT team - system check anytime, no need for phone calls - security change can take some time</p> <p>cloud sec - no physical access - 3rd party may have access - cloud providers w large-scale security     - users must follow sec best-practices - limited downtime - scalable sec options</p>"},{"location":"cloud%20computing/#comparisons-for-data-storage","title":"comparisons for data storage","text":"<ul> <li>speed</li> <li>money</li> <li>security</li> </ul>"},{"location":"code%20injection/","title":"Code injection","text":"<p>[[SQLi]]</p> <ul> <li>[[XML]] inkection - modify xml requests</li> <li>LDAP injection</li> <li>DLL injection - have app run a program for you</li> </ul>"},{"location":"collision%2Bbroadcast%20domains/","title":"Collision+broadcast domains","text":"<ul> <li> <p>collision domain - network segment where simul data transmissions collide with each other</p> <ul> <li>i.e. all devices in segment have to pay attention to msg even if it was not destined for them</li> <li>causes devices to re-transmit msgs one-by-one if collision occured</li> <li>usually happens in wireless networks, but also early Ethernet</li> <li>only happens in half-duplex mode</li> <li>split by router, switch (not split by hub)</li> </ul> </li> <li> <p>broadcast domain - domain in which a broadcast is forwarded</p> <ul> <li>split by router (not switch, hub)</li> <li>large broadcast domains cause congestion</li> </ul> </li> </ul>"},{"location":"confusion%20matrix/","title":"Confusion matrix","text":"<ul> <li>generally used for [[supervised learning]]<ul> <li>unsupervised uses matching matrix</li> </ul> </li> <li>used bc pure accuracy gives misleading results if dataset is unbalanced</li> </ul>"},{"location":"confusion%20matrix/#types-of-values","title":"types of values","text":"<ul> <li>true positive<ul> <li>actually true, identified as true</li> </ul> </li> <li>true negative<ul> <li>actually false, identified as false</li> </ul> </li> <li>false positive<ul> <li>actually false, identified as true</li> </ul> </li> <li>false negative<ul> <li>actually true, identified as false</li> </ul> </li> </ul>"},{"location":"crypto/","title":"Crypto","text":"<ul> <li>deterministic encrypt -\u00a0 same c for a given pt and key</li> <li> <p>probabilistic encrypt - encrypting same pt multiple times gives dif c</p> </li> <li> <p>can use nonce to add a random factor to encryption</p> <ul> <li>e.g. Initialization Vector</li> <li>salt is associated w password hashing</li> </ul> </li> </ul> <p>luv [[RSA]]</p> <p>[[PFS]]</p> <ul> <li> <p>digital signatures</p> <ul> <li>integrity</li> <li>auth</li> <li>non-repudiation</li> </ul> </li> <li> <p>key stretching done w</p> <ul> <li>Bcrypt - based on blowfish</li> <li>PBKDF2 - used by [[WPA]]2 and iOS</li> </ul> </li> </ul>"},{"location":"crypto/#encryption","title":"encryption","text":"<ul> <li>homomorphic encryption -&gt; ciphertext can still be used and worked with as if plaintext [[symmetric encryption]] asymmetric encryption</li> </ul>"},{"location":"crypto/#ciphers","title":"ciphers","text":"<ul> <li>stream - enc done one bit or byte at time</li> <li>block - block done at a type (usually 64 or 128 bit)<ul> <li>block cipher modes<ul> <li>ECB - use same key for each block</li> <li>CBC (cipher block chaining) - each block XORed w previous block + add random IV</li> <li>CTR - ECB but key is a counter</li> <li>GCM - enc w auth<ul> <li>seen in IPsec, [[SSH]], [[SSL-TLS]]</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"database/","title":"Database","text":""},{"location":"database/#security","title":"security","text":"<ul> <li>tokenization - replace sensitive data w non-sensitive placeholder<ul> <li>e.g. credit card -&gt; token sent to server for verif</li> <li>no actual enc or hashing so no overhead</li> </ul> </li> <li>hashing a password<ul> <li>adding salt to hash</li> </ul> </li> </ul>"},{"location":"devices/","title":"Devices","text":""},{"location":"devices/#components","title":"components","text":"<ul> <li>everyone has NIC</li> <li>[[CPU]]</li> </ul>"},{"location":"devices/#behavior-of-all-devices","title":"behavior of all devices","text":"<ul> <li> <p>switch boot sequence</p> <ol> <li>switch loads a power-on self-test (POST) program stored in ROM<ul> <li>POST checks the CPU subsystem.\u00a0</li> <li>tests the CPU, DRAM, and the portion of the flash device that makes up the flash file system</li> </ul> </li> <li>Switch loads the boot loader software stored in ROM</li> <li>Boot loader performs low-level CPU initialization</li> <li>boot loader initializes the flash file system on the system board</li> <li>boot loader locates and loads a default IOS operating system software image into memory and gives control of the switch over to the IOS</li> </ol> </li> <li> <p>end device boot sequence on 1st startup</p> <ul> <li>boot from HD or SDD or [[USB]] drive<ul> <li>device must request address if network interface is up (Ethernet or WLAN) -&gt; DHCP Discovery </li> </ul> </li> </ul> </li> </ul>"},{"location":"devices/#network-devices","title":"network devices","text":"<ul> <li>[[routing]]</li> <li>[[switching]]</li> <li>modems - modulation/demodulation legacy device -&gt; meant to port data onto Internet thru telephone lines/existing infrastructure<ul> <li>converts digital data to analog radio/telephone/etc signals, vice versa</li> <li>modern devices still all have some sort of modem (wifi convert digital to analog to transmit)</li> </ul> </li> </ul>"},{"location":"devices/#end-devices","title":"end devices","text":""},{"location":"embedded%20systems/","title":"Embedded systems","text":"<ul> <li> <p>SoC (System on a Chip)</p> <ul> <li>small form-factor<ul> <li>external int support</li> <li>usually lower power consumptions</li> <li>difficult to upgrade hardware</li> </ul> </li> </ul> </li> <li> <p>FPGA (Field-programmable gate array)</p> <ul> <li>integrated circuit configurable after manufacturing</li> <li>common in firewalls, routers</li> </ul> </li> <li> <p>SCADA/ICS </p> <ul> <li>found where you have industrial equipment</li> <li>distributed control systems</li> <li>require extensive segmentation/security from outside</li> </ul> </li> </ul>"},{"location":"endpoint%20defense/","title":"Endpoint defense","text":"<ul> <li> <p>antivirus/antimalware</p> </li> <li> <p>EDR (endpoint detection and response)</p> <ul> <li>look at more than signatures to find malware</li> <li>look at actions, then isolate threat</li> </ul> </li> <li> <p>DLP (data loss prevention)</p> </li> <li> <p>use of NGFW or host-based firewall like [[wf.msc]]</p> </li> <li> <p>HIDS (host-based IDS)</p> <ul> <li>log files, reconfigure firewall to block</li> </ul> </li> <li>HIPS<ul> <li>recognize, block known attack</li> <li>secure OS, app configs</li> <li>often built into endpoint protec software</li> <li>see weird signatures</li> </ul> </li> <li> <p>boot integrity</p> </li> <li> <p>FIM (file integrity monitoring) - check the files that should never change</p> <ul> <li>[[windows]] SFC</li> <li>linux Tripwire</li> </ul> </li> </ul>"},{"location":"fiber-optic/","title":"Fiber optic","text":"<ul> <li> <p>made of silicate glass usually</p> <ul> <li>so more fragile, cannot turn as much</li> </ul> </li> <li> <p>travels </p> <ul> <li>rlly fast, more bandwidth</li> <li>can be longer</li> </ul> </li> </ul>"},{"location":"firewall/","title":"Firewall","text":"<ul> <li>overall purpose:<ul> <li>filter traffic</li> <li>stop network attacks</li> </ul> </li> <li> <p>can be a \"firewall device\" (e.g. ASA, but technically they do a lot more), but usually a \"firewall service\" (e.g. [[wf.msc]], [[iptables]], ufw, simplewall, tinywall)</p> </li> <li> <p>devices</p> <ul> <li>WAF (web app firewall)- applies rules based on HTTP/HTTPS conversations<ul> <li>allow/deny based on expected input</li> <li>specifically protects web apps</li> <li>part of Payment Card industry Data Security Standard (PCI DSS)</li> </ul> </li> <li>UTM (Unified Threat mgmt)</li> </ul> </li> </ul>"},{"location":"firewall/#designrule-principles","title":"design/rule principles","text":"<ul> <li>DENY ALL, allow only needed (like ACL)<ul> <li>blocklist or allowlist?</li> </ul> </li> </ul>"},{"location":"firewall/#types-of-firewalls","title":"types of firewalls","text":"<ul> <li> <p>routed vs transparent modes</p> <ul> <li>routed - shows as a hop in the network</li> <li>transparent - invisible to attackers</li> </ul> </li> <li> <p>open-source vs proprietary</p> <ul> <li>open-source more tradit features</li> <li>proprietary has app control, purpose-built hardware</li> </ul> </li> <li> <p>hardware vs software</p> </li> <li> <p>appliance vs host-based vs virtual</p> </li> <li> <p>stateless vs stateful</p> <ul> <li>stateless</li> <li>stateful<ul> <li>most firewalls today</li> <li>more easily DoS-able bc need for more computing</li> </ul> </li> </ul> </li> <li> <p>tradit vs NGFW</p> <ul> <li> <p>traditional</p> <ul> <li>stateful inspection incoming/outgoing</li> <li>partial application control/visibility</li> <li> <p>L2-L4 only</p> </li> <li> <p>cannot decrypt/inspect SSL traffic</p> </li> <li>integrated IPS and IDS are deployed separately</li> </ul> </li> <li> <p>next gen (NGFW)</p> <ul> <li> <p>also known as application layer gateway, stateful multilayer inspection, deep packet inspection</p> </li> <li> <p>stateful inspection on incoming/outgoing</p> </li> <li>comprehensive application control/visibility</li> </ul> </li> </ul> </li> </ul>"},{"location":"hardware/","title":"Hardware","text":""},{"location":"hardware/#security","title":"security","text":"<ul> <li>jump server is in your LAN, use it to configure/check other devices in protected env</li> <li>[[TPM]]</li> <li>[[HSM]] (hardware security module)</li> <li>sensors (logs) and collectors (parsing logs)</li> </ul>"},{"location":"hash/","title":"Hash","text":"<ul> <li>MD5 hash on windows<ul> <li>using `get-filehash -algorithm md5  <li><code>md5sum.exe hashing.txt</code></li>"},{"location":"john/","title":"John","text":"<p>john -wordlist=/usr/share/john/password.lst userpwds</p>"},{"location":"lines/","title":"Lines","text":"<ul> <li>console -&gt; 0<ul> <li>what you actually do in real-life with a blue rj45 and [[PuTTY]]</li> </ul> </li> <li>VTY (virtual terminal) -&gt; 0-4 or 0-15</li> <li>auxiliary -&gt; 0<ul> <li></li> </ul> </li> </ul>"},{"location":"linux%20commands/","title":"Linux commands","text":"<p><code>cd -</code> - go back to previous directory</p>"},{"location":"linux%20commands/#file-hunting","title":"file hunting","text":"<p><pre><code>grep \"auth failure\" /var/log/auth.log\ncat /var/log/auth.log | grep \"auth failure\"\n</code></pre> show only entries with auth failure - <code>grep</code> can use [[regex]]</p> <pre><code>\n</code></pre>"},{"location":"linux/","title":"Linux","text":"<p>linux privesc linux commands</p> <ul> <li>mainly used for servers (96.3% of web servers lmfao)</li> <li>linux is the OS, it has distros<ul> <li>Ubuntu</li> <li>[[Arch Linux]]</li> <li>CentOS</li> <li>Fedora</li> <li>Debian -&gt; Kali</li> <li>RHEL (Red Hat Enterprise Linux)</li> <li>Manjaro</li> </ul> </li> </ul>"},{"location":"logging/","title":"Logging","text":"<ul> <li>[[SIEM]] to centralize logging</li> <li> <p>commonly use the [[syslog]] standard</p> </li> <li> <p>log rotation - you clear logs when it gets to a certain pt, start logging again from top of log file</p> <ul> <li>using <code>head</code> tells you if log rotation is properly implemented</li> </ul> </li> </ul>"},{"location":"logging/#linux-logging","title":"linux logging","text":"<ul> <li><code>logger \"backup started\"</code><ul> <li>add timestamped entry</li> </ul> </li> <li><code>journalctl --list-boots</code></li> <li><code>journalctl --since \"1 hour ago\"</code></li> </ul>"},{"location":"logging/#windows-logs","title":"windows logs","text":"<ul> <li>security log - security, audit, access -&gt; s/f</li> <li>system</li> <li>application</li> </ul>"},{"location":"lusrmgr.msc/","title":"Lusrmgr.msc","text":"<p>Local User and Group Management</p>"},{"location":"mail/","title":"Mail","text":"<p>email</p> <ul> <li>MIME (multipurpose Internet Mail Extensions) - extends email format for graphics, audio, video files over Internet mail<ul> <li>S/MIME for enc, aut, integ</li> </ul> </li> <li>[[SNMP]] for sending/receiving mail</li> <li>[[POP]]3 -&gt; IMAP (more features)<ul> <li>both for mail access</li> </ul> </li> </ul>"},{"location":"malware/","title":"Malware","text":"<ul> <li>ransomware/crypto-malware</li> <li>virus<ul> <li>can be fileless - resides only in RAM</li> <li>can be armored -&gt; complex code, encryption, hiding</li> <li>can be polymorphic -&gt; changing</li> </ul> </li> <li>worm - replicates itself w/o user intervention over a network</li> <li>trojan horse - disguise itself as smth legit</li> <li>[[rootkit]] - privesc</li> <li> <p>logic bomb</p> <ul> <li>time bomb, user event -&gt; starts w predefied event -&gt; often deletes itself</li> <li> <p>examples</p> <ul> <li>2013 South Korea bank logic bomb</li> <li>2016 Ukraine high voltage substation -&gt; bringing down electrical networks<ul> <li>customized for SCADA networks</li> </ul> </li> </ul> </li> <li> <p>to prevent</p> <ul> <li>formal change control </li> <li>host-based intrusion detection</li> <li>tripwire</li> <li>constant auditing</li> </ul> </li> </ul> </li> </ul>"},{"location":"mmc/","title":"Mmc","text":"<ul> <li>Microsoft Management Console (mmc)- lets you config system with GUI things called snap-ins<ul> <li>snap-ins include<ul> <li>compmgmt.msc (Computer Management)</li> <li>gpmc.msc (Group Policy Management Console)</li> <li>[[services.msc]]</li> <li>perfmon (Performance Monitor)</li> <li>eventvwr</li> <li>lusrmgr.msc</li> </ul> </li> </ul> </li> </ul>"},{"location":"models%20of%20access%20control/","title":"Models of access control","text":"<ul> <li>Biba Model (\"read up, write down\")<ul> <li>emphasis on data integrity, rather than confidentiality</li> <li>users can only create content at or below their integrity level, only view content at or above their integrity level</li> </ul> </li> <li>Bell-LaPadula Model (\"read down\", \"write up\")<ul> <li></li> </ul> </li> </ul>"},{"location":"netstat/","title":"Netstat","text":"<ul> <li>states include<ul> <li>ESTABLISHED - active open connection</li> <li>LISTEN - waiting for a connection request</li> <li>CLOSE_WAIT - waiting for connection termination request</li> <li>TIME_WAIT - waiting to make sure remote system received TCP-based acknowledgement</li> </ul> </li> </ul>"},{"location":"network%20attacks/","title":"Network attacks","text":"<ul> <li> <p>types - kinda overlap</p> <ul> <li>MITM<ul> <li>[[replay attack]]</li> </ul> </li> <li>[[spoofing]]</li> </ul> </li> <li> <p>session hijacking - get session id and pose as victim</p> <ul> <li>use [[SSL-TLS]]</li> </ul> </li> <li> <p>get info thru [[Wireshark]], kismet</p> </li> </ul> <p>Bluetooth attacks</p> <p>installation of network taps or port mirrors</p>"},{"location":"network%20measurements/","title":"Network measurements","text":"<ul> <li>bandwidth - max bit rate/rate of info passing through</li> <li> <p>throughput - successful bit rate - ie consumed bandwidth</p> </li> <li> <p>redundancy/reliability</p> </li> </ul>"},{"location":"networking/","title":"Networking","text":"<ul> <li> <p>models</p> <ul> <li>OSI model</li> <li>[[TCP-IP]] model</li> <li>cisco-3-layer model</li> </ul> </li> <li> <p>topologies - bus, star, mesh, hybrid</p> </li> <li>devices</li> <li>through wired Ethernet or later, [[Wi-Fi]]</li> <li> <p>how good is smth? -&gt; network measurements</p> </li> <li> <p>tools</p> <ul> <li>[[Wireshark]] to analyze traffic</li> <li>ping</li> <li>netstat</li> <li>pathping</li> <li>tracert/[[traceroute]]</li> </ul> </li> <li> <p>SDN (Software -designed networking)</p> <ul> <li>centrally managed</li> <li>functions/abilities of devices defined by software</li> </ul> </li> <li>SDV (Software-design visibility)<ul> <li>see the traffic to secure the data</li> </ul> </li> </ul>"},{"location":"networking/#behaviors","title":"behaviors","text":""},{"location":"networking/#http-get","title":"HTTP GET","text":"<ul> <li>random port is used for client source port (ephemeral port)<ul> <li>sockets pair a port and ip address</li> </ul> </li> </ul>"},{"location":"networking/#dns-query-http-get","title":"DNS query -&gt; HTTP GET","text":"<ol> <li>user types in web address into browser -&gt; browser requests IP of given domain name</li> <li>host checks to see if DNS server on LAN</li> <li>not on LAN, so forwards DNS query to default gateway</li> <li>default gateway forwards it to DNS server</li> <li>DNS server undergoes recursive DNS lookup<ul> <li>main DNS server queries multiple other DNS servers for the actual IP</li> </ul> </li> <li>DNS server forwards found IP to default gateway</li> <li>default gateway receives it and forwards to original IP<ul> <li>knows the original host despite private address bc of PAT and use of ephemeral port</li> </ul> </li> <li>host now knows IP and sets up TCP connection w/ web server (on web server's port 80)</li> <li> <p>host can now send HTTP GET request to get webpage contents</p> </li> <li> <p>fundamentally syncronized w/ NTP</p> </li> </ol>"},{"location":"networking/#connectivity","title":"connectivity?","text":"<ol> <li>basic stuff<ul> <li>default gateway not configured</li> <li>L2/L3 port not on</li> <li>DNS not configured correctly</li> <li>does not have an IP</li> <li>timeout (spam ping or change ping TTL)</li> <li>pinged private IP not on network, dropped by router</li> <li>ARP problem (? extremely rare)</li> </ul> </li> <li>[[VLAN]]<ul> <li>trying to ping dif VLAN</li> <li>wrong default gateway on VLAN</li> <li>native VLAN mismatch</li> <li>trunk not configured</li> <li>VLAN not allowed on trunk</li> </ul> </li> <li>routing<ul> <li>default/static route goes somewhere weird</li> <li>wrong/no network commands in dynamic routing</li> </ul> </li> <li>security<ul> <li>ACL rules</li> </ul> </li> </ol>"},{"location":"networking/#vulns-on-oss-related-to-networking","title":"vulns on os's related to networking","text":"<ul> <li>on linux and Mac, check /etc/hosts.equiv file (trusted hosts file) - remote computers on that file can login to your computer without pass</li> <li>also check .rhosts file - holds host name and account name \u2192 trusted remote users</li> </ul>"},{"location":"notes/","title":"Notes","text":"<p>Publishing with vercel is quite simple.</p> <p>However, that means i need to add those couple of lines to the beginning of every note i want to publish.</p> <p>meh</p>"}]}